[
  {
    "key": "ctrl+a",
    "command": "workbench.action.terminal.focus",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+a",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "terminalFocus"
  },
  //focus to editor panel
  {
    "key": "ctrl+e",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  //focus to powershell panel
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.focus"
  },
  {
    "key": "shift+space",
    "command": "editor.emmet.action.expandAbbreviation"
    // "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "-editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "ctrl+shift+space",
    "command": "editor.emmet.action.wrapWithAbbreviation"
  },
  {
    "key": "shift+ctrl+a",
    "command": "workbench.action.files.copyPathOfActiveFile",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+shift+oem_2",
    "command": "editor.emmet.action.toggleComment"
  },
  {
    "key": "ctrl+shift+s",
    "command": "editor.emmet.action.splitJoinTag"
  },
  {
    "key": "ctrl+shift+h",
    "command": "editor.emmet.action.selectPrevItem"
  },
  {
    "key": "ctrl+shift+l",
    "command": "editor.emmet.action.selectNextItem"
  },
  {
    "key": "ctrl+shift+d",
    "command": "editor.emmet.action.removeTag"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+d",
    "command": "explorer.newFolder"
  },
  {
    "key": "ctrl+h",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+h",
    "command": "editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-selectNextPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+pageup",
    "command": "-selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+pageup",
    "command": "-extension.vim_ctrl+pageup",
    "when": "editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-extension.vim_ctrl+pagedown",
    "when": "editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-search.action.replaceAllInFile",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-search.action.replaceAllInFolder",
    "when": "folderMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+f",
    "command": "editor.action.insertSnippet",
    "args": {
      "name": "function"
    },
  },
  {
    "key": "alt+h",
    "command": "editor.action.insertSnippet",
    "args": {
      "name": "brakets1"
    },
  },
  {
    "key": "alt+j",
    "command": "editor.action.insertSnippet",
    "args": {
      "name": "double quotation"
    },
  },
  {
    "key": "alt+ctrl+j",
    "command": "editor.action.insertSnippet",
    "args": {
      "name": "template literal"
    },
  },
  {
    "key": "alt+l",
    "command": "editor.action.insertSnippet",
    "args": {
      "name": "Print to console2"
    },
  },
  {
    "key": "alt+p",
    "command": "editor.action.insertSnippet",
    "args": {
      "name": "triple equal"
    },
  },
  {
    "key": "alt+oem_1",
    "command": "editor.action.insertSnippet",
    "args": {
      "name": "if"
    },
  },
  {
    "key": "alt+f f",
    "command": "editor.action.insertSnippet",
    "args": {
      "langId": "javascript",
      "name": "function"
    },
    "when": "editorLangId == 'javascript'"
  },
  {
    "key": "alt+f a",
    "command": "editor.action.insertSnippet",
    "args": {
      "langId": "javascript",
      "name": "async function"
    },
    "when": "editorLangId == 'javascript'"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-markdown-preview-enhanced.runAllCodeChunks",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+j",
    "command": "markdown-checkbox.markCheckbox",
    "when": "editorLangId == markdown"
  },
  {
    "key": "ctrl+k",
    "command": "markdown-checkbox.createCheckbox",
    "when": "editorLangId == markdown"
  },
  {
    "key": "ctrl+t",
    "command": "markdown-preview-enhanced.insertTable",
    "when": "editorLangId == markdown"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-markdown.showPreview",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-markdown.extension.togglePreview",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-markdown-preview-enhanced.openPreview",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+alt+s",
    "command": "extension.changeCase.snake"
  },
  {
    "key": "ctrl+alt+u",
    "command": "extension.changeCase.upper"
  },
  {
    "key": "ctrl+alt+c",
    "command": "extension.changeCase.camel"
  },
  {
    "key": "ctrl+shift+pageup",
    "command": "-workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "ctrl+shift+pagedown",
    "command": "-workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "ctrl+shift+pageup",
    "command": "workbench.action.focusPreviousGroup"
  },
  {
    "key": "ctrl+shift+pagedown",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "ctrl+pageup",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "ctrl+k ctrl+pageup",
    "command": "-workbench.action.previousEditorInGroup"
  },
  {
    "key": "ctrl+pagedown",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+k ctrl+pagedown",
    "command": "-workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "ctrl+s",
    "command": "-workbench.action.files.save"
  },
  {
    "key": "ctrl+oem_minus",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "ctrl+oem_plus",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "ctrl+shift+j",
    "command": "editor.emmet.action.balanceOut"
  },
  {
    "key": "ctrl+shift+k",
    "command": "editor.emmet.action.balanceIn"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+z",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
  },
  {
    "key": "tab",
    "command": "-acceptSelectedSuggestion",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "explorer.newFile"
  },
]